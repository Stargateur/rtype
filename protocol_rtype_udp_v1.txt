Antoine PLASKOWSKI : antoine.plaskowski@epitech.eu


                       R-Type Network Protocol v1


Table of Contents

    1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .
    2.  Versionning . . . . . . . . . . . . . . . . . . . . . . . . .
    3.  Basic structures  . . . . . . . . . . . . . . . . . . . . . .
      3.1.  Basic fields  . . . . . . . . . . . . . . . . . . . . . .
        3.1.1.  String field  . . . . . . . . . . . . . . . . . . . .
        3.1.2.  Array field . . . . . . . . . . . . . . . . . . . . .
      3.2.  Packet header . . . . . . . . . . . . . . . . . . . . . .
    4.  Protocol packets definition . . . . . . . . . . . . . . . . .
      4.1.  Result packet . . . . . . . . . . . . . . . . . . . . . .
      4.2.  MAC address packet  . . . . . . . . . . . . . . . . . . .
      4.3.  Version packet  . . . . . . . . . . . . . . . . . . . . .
      4.4.  Connect packet  . . . . . . . . . . . . . . . . . . . . .
      4.5.  Disconnect packet . . . . . . . . . . . . . . . . . . . .
      4.6.  ServerCmd packet  . . . . . . . . . . . . . . . . . . . .
      4.7.  ClientLog packet  . . . . . . . . . . . . . . . . . . . .
      4.8.  Ping packet . . . . . . . . . . . . . . . . . . . . . . .
      4.9.  Pong packet . . . . . . . . . . . . . . . . . . . . . . .
      4.10.  Keyboard packet  . . . . . . . . . . . . . . . . . . . .
      4.11.  mouse packet . . . . . . . . . . . . . . . . . . . . . .

1.  Introduction

    This document describe the network protocol used in the "R-Type" project.

    This protocol version is 1.

    All the integers (size, etc...) are represented in little-endian.

2.  Versionning

    This protocol is versionned in order to allow implementations to keep
    a retro-compatibility against older protocol versions.

    The protocol version is just an integer starting at "1", which is
    increased when a major change (non retro-compatible) is bringed in
    this specification.

    +------------------+------------+---------------+
    | Protocol version | Date       | Description   |
    +------------------+------------+---------------+
    | 1                | 2015-10-18 | First version |
    +------------------+------------+---------------+

      Table 0: Version

3.  Basic structures

    This section will define some basic structures used by the network
    protocol.

    All size are in octet.
    uintX_t is a unsigned integer of X bit

3.1.  Basic fields

    This section will define some basic fields used by the packets in the
    protocol.

3.1.1.  String field

    The maximum size of a string MUST be "2^8-1" 

    The string is encoded with ASCII table.

    +--------+-----------+---------------+
    | Name   | type      | Description   |
    +--------+-----------+---------------+
    | length | uint8_t   | String length |
    | data   | uint8_t[] | String data   |
    +--------+-----------+---------------+

      Table 1: String field structure

3.1.2.  Array field

    The maximum size of an array MUST be "2^8-1".

    The type of the array items MUST be unique and defined when using the
    array field.

    +-------+---------+-------------+
    | Name  | type    | Description |
    +-------+---------+-------------+
    | size  | uint8_t | Array size  |
    | data  | T[]     | Array data  |
    +-------+---------+-------------+

      Table 2: Array field structure

3.2.  Packet header

    This structure is present before any packet described in this
    protocol.

    Each packet MUST be assigned to an opcode, as defined in each packet
    description sections.

    The maximum size of the data MUST be "2^16-1"

    +--------+----------+--------------+
    | Name   | type     | Description  |
    +--------+----------+--------------+
    | opcode | uint8_t  | Opcode       |
    | size   | uint16_t | Size of data |
    +--------+----------+--------------+

      Table 3: Packet header structure

    * opcode : It's identify what is the packet type
    * size : It's the size of the packet without the header.

4.  Protocol packets definition

4.18 sprite

    +--------+-------+
    | Name   | Value |
    +--------+-------+
    | Opcode | ?     |
    | size   | ?     |
    +--------+-------+

    +---------+-----------+----------------------------+
    | Name    | Data type | Description                |
    +---------+-----------+----------------------------+
    | sprite | sprite[] | sprite |
    +---------+-----------+----------------------------+

    +---------+-----------+----------------------------+
    | Name    | Data type | Description                |
    +---------+-----------+----------------------------+
    | id | uint8_t | id sprite |
    | x | uint8_t | id sprite |
    | y | uint8_t | id sprite |
    | rotation | uint8_t | id sprite |
    +---------+-----------+----------------------------+

4.18 sounds

    +--------+-------+
    | Name   | Value |
    +--------+-------+
    | Opcode | ?     |
    | size   | ?     |
    +--------+-------+

    +---------+-----------+----------------------------+
    | Name    | Data type | Description                |
    +---------+-----------+----------------------------+
    | sound | sound[] | sound |
    +---------+-----------+----------------------------+

    +---------+-----------+----------------------------+
    | Name    | Data type | Description                |
    +---------+-----------+----------------------------+
    | id | uint8_t | id sound |
    +---------+-----------+----------------------------+

4.19 input

    +--------+-------+
    | Name   | Value |
    +--------+-------+
    | Opcode | ?     |
    | size   | ?     |
    +--------+-------+

    +---------+-----------+----------------------------+
    | Name    | Data type | Description                |
    +---------+-----------+----------------------------+
    +---------+-----------+----------------------------+

4.22 truc

    +--------+-------+
    | Name   | Value |
    +--------+-------+
    | Opcode | ?     |
    | size   | ?     |
    +--------+-------+

    +---------+-----------+----------------------------+
    | Name    | Data type | Description                |
    +---------+-----------+----------------------------+
    | temps | uint8_t | score |
    | vie | uint8_t | 0 is looser 1 is winner |
    | score | uint8_t | 0 is looser 1 is winner |
    +---------+-----------+----------------------------+
